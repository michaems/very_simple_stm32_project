
Hello_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000188  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000380  08000388  00010388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000380  08000380  00010388  2**0
                  CONTENTS
  4 .ARM          00000000  08000380  08000380  00010388  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000380  08000388  00010388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000380  08000380  00010380  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000384  08000384  00010384  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010388  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000388  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000388  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  00010388  2**0
                  CONTENTS, READONLY
 12 .debug_info   000003a1  00000000  00000000  000103b2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000010a  00000000  00000000  00010753  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000050  00000000  00000000  00010860  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000038  00000000  00000000  000108b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0001cee6  00000000  00000000  000108e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000038d  00000000  00000000  0002d7ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000a2a14  00000000  00000000  0002db5b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000049  00000000  00000000  000d056f  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000080  00000000  00000000  000d05b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	08000368 	.word	0x08000368

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	08000368 	.word	0x08000368

08000238 <main>:

void delayMs(uint32_t ms);


int main(void)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	af00      	add	r7, sp, #0
    /* Loop forever */
    RCC->AHB1ENR |= 0x2;
 800023c:	4b13      	ldr	r3, [pc, #76]	; (800028c <main+0x54>)
 800023e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000240:	4a12      	ldr	r2, [pc, #72]	; (800028c <main+0x54>)
 8000242:	f043 0302 	orr.w	r3, r3, #2
 8000246:	6313      	str	r3, [r2, #48]	; 0x30
    GPIOB->MODER &= ~(0x3 << 14);
 8000248:	4b11      	ldr	r3, [pc, #68]	; (8000290 <main+0x58>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	4a10      	ldr	r2, [pc, #64]	; (8000290 <main+0x58>)
 800024e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000252:	6013      	str	r3, [r2, #0]
    GPIOB->MODER|= (1<<14);
 8000254:	4b0e      	ldr	r3, [pc, #56]	; (8000290 <main+0x58>)
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	4a0d      	ldr	r2, [pc, #52]	; (8000290 <main+0x58>)
 800025a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800025e:	6013      	str	r3, [r2, #0]

	for(;;)
	{
	    GPIOB->ODR |= (1 << 7);
 8000260:	4b0b      	ldr	r3, [pc, #44]	; (8000290 <main+0x58>)
 8000262:	695b      	ldr	r3, [r3, #20]
 8000264:	4a0a      	ldr	r2, [pc, #40]	; (8000290 <main+0x58>)
 8000266:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800026a:	6153      	str	r3, [r2, #20]
	    delayMs(500);
 800026c:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000270:	f000 f810 	bl	8000294 <delayMs>
	    GPIOB->ODR &= ~(1 << 7);
 8000274:	4b06      	ldr	r3, [pc, #24]	; (8000290 <main+0x58>)
 8000276:	695b      	ldr	r3, [r3, #20]
 8000278:	4a05      	ldr	r2, [pc, #20]	; (8000290 <main+0x58>)
 800027a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800027e:	6153      	str	r3, [r2, #20]
	    delayMs(500);
 8000280:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000284:	f000 f806 	bl	8000294 <delayMs>
	    GPIOB->ODR |= (1 << 7);
 8000288:	e7ea      	b.n	8000260 <main+0x28>
 800028a:	bf00      	nop
 800028c:	40023800 	.word	0x40023800
 8000290:	40020400 	.word	0x40020400

08000294 <delayMs>:
	}
}

void delayMs(uint32_t ms)
{
 8000294:	b480      	push	{r7}
 8000296:	b085      	sub	sp, #20
 8000298:	af00      	add	r7, sp, #0
 800029a:	6078      	str	r0, [r7, #4]
    for (; ms > 0; ms--)
 800029c:	e00d      	b.n	80002ba <delayMs+0x26>
    {
        for (int i=0; i < 3195; i++);
 800029e:	2300      	movs	r3, #0
 80002a0:	60fb      	str	r3, [r7, #12]
 80002a2:	e002      	b.n	80002aa <delayMs+0x16>
 80002a4:	68fb      	ldr	r3, [r7, #12]
 80002a6:	3301      	adds	r3, #1
 80002a8:	60fb      	str	r3, [r7, #12]
 80002aa:	68fb      	ldr	r3, [r7, #12]
 80002ac:	f640 427a 	movw	r2, #3194	; 0xc7a
 80002b0:	4293      	cmp	r3, r2
 80002b2:	ddf7      	ble.n	80002a4 <delayMs+0x10>
    for (; ms > 0; ms--)
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	3b01      	subs	r3, #1
 80002b8:	607b      	str	r3, [r7, #4]
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d1ee      	bne.n	800029e <delayMs+0xa>
    }
}
 80002c0:	bf00      	nop
 80002c2:	bf00      	nop
 80002c4:	3714      	adds	r7, #20
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bc80      	pop	{r7}
 80002ca:	4770      	bx	lr

080002cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d4:	480c      	ldr	r0, [pc, #48]	; (8000308 <LoopForever+0x6>)
  ldr r1, =_edata
 80002d6:	490d      	ldr	r1, [pc, #52]	; (800030c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d8:	4a0d      	ldr	r2, [pc, #52]	; (8000310 <LoopForever+0xe>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002dc:	e002      	b.n	80002e4 <LoopCopyDataInit>

080002de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e2:	3304      	adds	r3, #4

080002e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e8:	d3f9      	bcc.n	80002de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ea:	4a0a      	ldr	r2, [pc, #40]	; (8000314 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ec:	4c0a      	ldr	r4, [pc, #40]	; (8000318 <LoopForever+0x16>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f0:	e001      	b.n	80002f6 <LoopFillZerobss>

080002f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f4:	3204      	adds	r2, #4

080002f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f8:	d3fb      	bcc.n	80002f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fa:	f000 f811 	bl	8000320 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fe:	f7ff ff9b 	bl	8000238 <main>

08000302 <LoopForever>:

LoopForever:
    b LoopForever
 8000302:	e7fe      	b.n	8000302 <LoopForever>
  ldr   r0, =_estack
 8000304:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000308:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800030c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000310:	08000388 	.word	0x08000388
  ldr r2, =_sbss
 8000314:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000318:	2000001c 	.word	0x2000001c

0800031c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800031c:	e7fe      	b.n	800031c <ADC_IRQHandler>
	...

08000320 <__libc_init_array>:
 8000320:	b570      	push	{r4, r5, r6, lr}
 8000322:	4d0d      	ldr	r5, [pc, #52]	; (8000358 <__libc_init_array+0x38>)
 8000324:	4c0d      	ldr	r4, [pc, #52]	; (800035c <__libc_init_array+0x3c>)
 8000326:	1b64      	subs	r4, r4, r5
 8000328:	10a4      	asrs	r4, r4, #2
 800032a:	2600      	movs	r6, #0
 800032c:	42a6      	cmp	r6, r4
 800032e:	d109      	bne.n	8000344 <__libc_init_array+0x24>
 8000330:	4d0b      	ldr	r5, [pc, #44]	; (8000360 <__libc_init_array+0x40>)
 8000332:	4c0c      	ldr	r4, [pc, #48]	; (8000364 <__libc_init_array+0x44>)
 8000334:	f000 f818 	bl	8000368 <_init>
 8000338:	1b64      	subs	r4, r4, r5
 800033a:	10a4      	asrs	r4, r4, #2
 800033c:	2600      	movs	r6, #0
 800033e:	42a6      	cmp	r6, r4
 8000340:	d105      	bne.n	800034e <__libc_init_array+0x2e>
 8000342:	bd70      	pop	{r4, r5, r6, pc}
 8000344:	f855 3b04 	ldr.w	r3, [r5], #4
 8000348:	4798      	blx	r3
 800034a:	3601      	adds	r6, #1
 800034c:	e7ee      	b.n	800032c <__libc_init_array+0xc>
 800034e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000352:	4798      	blx	r3
 8000354:	3601      	adds	r6, #1
 8000356:	e7f2      	b.n	800033e <__libc_init_array+0x1e>
 8000358:	08000380 	.word	0x08000380
 800035c:	08000380 	.word	0x08000380
 8000360:	08000380 	.word	0x08000380
 8000364:	08000384 	.word	0x08000384

08000368 <_init>:
 8000368:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800036a:	bf00      	nop
 800036c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800036e:	bc08      	pop	{r3}
 8000370:	469e      	mov	lr, r3
 8000372:	4770      	bx	lr

08000374 <_fini>:
 8000374:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000376:	bf00      	nop
 8000378:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800037a:	bc08      	pop	{r3}
 800037c:	469e      	mov	lr, r3
 800037e:	4770      	bx	lr
